version: '3.8'

services:
  db-test:
    image: postgres:15
    restart: always
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 2s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users_task_test
  redis-test:
    image: redis:3
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 2s
      timeout: 5s
      retries: 10
    ports:
      - "6379:6379"
  api-test:
    build:
      context: .
    ports:
      - "3000:3000"
    depends_on:
      db-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    environment:
      PORT: 3000
      NODE_ENV: test
      PROVIDER: LOCAL
      JWT_ACCESS_SECRET: ACCESS_SECRET
      JWT_ACCESS_EXPIRES_IN: 15m
      JWT_REFRESH_SECRET: REFRESH_SECRET
      JWT_REFRESH_EXPIRES_IN: 1s
      DB_HOST: db-test
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: users_task_test
      REDIS_URL: redis://redis:6379
      REDIS_DEFAULT_TTL: 1000
      ENV: TEST
    command: sh -c "npm run migration:run && npm run test:cov"